package com.dasheck.materialminesweeper.fragments.profile;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.view.View;
import butterknife.Bind;
import butterknife.OnClick;
import com.dasheck.materialminesweeper.R;
import com.dasheck.materialminesweeper.annotations.Layout;
import com.dasheck.materialminesweeper.annotations.Title;
import com.dasheck.materialminesweeper.fragments.BaseFragment;
import com.dasheck.materialminesweeper.utilities.Utilities;
import de.hdodenhof.circleimageview.CircleImageView;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import javax.inject.Inject;
import timber.log.Timber;

/**
 * @author Stefan Neidig
 */
@Layout(R.layout.fragment_profile) @Title(R.string.profile_title) public class ProfileFragment extends BaseFragment
    implements ProfileView {

  @Bind(R.id.profileImageView) CircleImageView profileImageView;

  @Inject ProfilePresenter presenter;

  @OnClick(R.id.button) public void onButtonClicked(View view) {
    presenter.registerNewImage();
  }

  @Override public void initializeViews() {
    setPresenter(presenter);

    //profileImageView.setImageBitmap(Utilities.base64StringToBitmap(
    //    "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"));
  }

  @Override public void startImageIntent() {
    Intent intent = new Intent();
    intent.setType("image/*");
    intent.setAction(Intent.ACTION_GET_CONTENT);
    intent.addCategory(Intent.CATEGORY_OPENABLE);
    startActivityForResult(intent, 100);
  }

  @Override public void onActivityResult(int requestCode, int resultCode, Intent data) {
    super.onActivityResult(requestCode, resultCode, data);

    Timber.d("ProfileFragment:47: " + requestCode + ", " + resultCode + ", " + data + ", " + Activity.RESULT_OK);



    if (requestCode == 100 && resultCode == Activity.RESULT_OK) {
      try {
        InputStream stream = getActivity().getContentResolver().openInputStream(data.getData());
        Bitmap bitmap = BitmapFactory.decodeStream(stream);
        stream.close();
        profileImageView.setImageBitmap(bitmap);

        Timber.d("ProfileFragment:65: " + "Image set");
      } catch (IOException e) {
        e.printStackTrace();
      }
    }
    super.onActivityResult(requestCode, resultCode, data);
  }
}
